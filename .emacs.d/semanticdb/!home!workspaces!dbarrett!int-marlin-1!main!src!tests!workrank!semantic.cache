;; Object workrank/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "workrank/"
  :tables
  (list
    (semanticdb-table "testworkrank.cpp"
      :major-mode 'c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [135 154])
            ("map" include (:system-flag t) nil [155 169])
            ("math.h" include (:system-flag t) nil [170 187])
            ("vector" include (:system-flag t) nil [188 205])
            ("nzglobals.h" include nil nil [207 229])
            ("rsschedsn.h" include nil nil [230 252])
            ("nzstate.h" include nil nil [253 273])
            ("rcDbg.h" include nil nil [274 292])
            ("schedpolicy.h" include nil nil [293 317])
            ("dbossched.h" include nil nil [318 340])
            ("jobcommon.h" include nil nil [342 364])
            ("memAutoAlloc.h" include nil nil [365 390])
            ("s_nz" variable (:type ("common_memory_t" type (:type "class") nil nil)) nil [392 413])
            ("s_nzstate" variable (:type ("NzState" type (:type "class") nil nil)) nil [414 432])
            ("testNum" variable
               (:typemodifiers ("static")
                :type "int")
                nil [434 453])
            ("testResults" variable
               (:typemodifiers ("static")
                :type ("std::vector" type
                     (:template-specifier 
                        ( ("bool" type nil nil nil))                        
                      :type "class")
                      nil nil))
                nil [454 491])
            ("pctTolerance" variable
               (:typemodifiers ("static")
                :type "double")
                nil [492 529])
            ("s_placeHolderPlan" variable
               (:pointer 1
                :type ("CPlan" type (:type "class") nil nil))
                nil [531 556])
            ("instance" function
               (:pointer 1
                :parent "NzState"
                :type ("NzState" type (:type "class") nil nil))
                nil [558 613])
            ("updateWeights" function
               (:parent "CWorkItem"
                :arguments 
                  ( ("newWeight" variable (:type "int") (reparse-symbol arg-sub-list) [645 659])
                    ("newRequiredWeight" variable (:type "int") (reparse-symbol arg-sub-list) [685 707])
                    ("newAdjustedWeight" variable (:type "int") (reparse-symbol arg-sub-list) [733 755]))                  
                :type "void")
                nil [615 1338])
            ("compoundWork" function
               (:parent "CWorkItem"
                :type ("int64" type (:type "class") nil nil))
                nil [1340 1389])
            ("CAutoSchedLock" function
               (:constructor-flag t
                :parent "CAutoSchedLock"
                :type ("CAutoSchedLock" type (:type "class") nil nil))
                nil [1391 1426])
            ("CAutoSchedLock" function
               (:destructor-flag t
                :parent "CAutoSchedLock"
                :type "void")
                nil [1427 1463])
            ("isCurrentSnippetCompressed" function
               (:parent "CPlan"
                :type "bool")
                nil [1465 1533])
            ("setOsPriority" function
               (:parent "CWorkItem"
                :arguments 
                  ( ("priority" variable (:type "int") (reparse-symbol arg-sub-list) [1565 1578]))                  
                :type "void")
                nil [1535 1581])
            ("checkForUdxOrALoad" function
               (:parent "ARsgSched"
                :arguments 
                  ( ("" variable
                       (:pointer 1
                        :type ("CWorkItem" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1618 1629]))                  
                :type "void")
                nil [1583 1631])
            ("BladeAccounting" function
               (:constructor-flag t
                :parent "BladeAccounting"
                :arguments 
                  ( ("numBlades" variable (:type "int") (reparse-symbol arg-sub-list) [1666 1680])
                    ("numDataSlices" variable (:type "int") (reparse-symbol arg-sub-list) [1681 1699])
                    ("dataSliceTbl" variable
                       (:pointer 1
                        :type ("NzDataSliceAddrs" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1708 1739])
                    ("memType" variable (:type ("MemType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1740 1756])
                    ("pcy" variable
                       (:pointer 1
                        :type ("CSchedPolicy" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1757 1775]))                  
                :type ("BladeAccounting" type (:type "class") nil nil))
                nil [1633 1851])
            ("BladeAccounting" function
               (:destructor-flag t
                :parent "BladeAccounting"
                :type "void")
                nil [1853 1917])
            ("s_bladeAcc" function
               (:prototype-flag t
                :typemodifiers ("static")
                :arguments 
                  ( ("" variable (:type ("NULL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1959 1964])
                    ("" variable (:type ("mem::REGION_GLOBAL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1965 1984])
                    ("" variable (:type ("NULL" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1985 1990]))                  
                :type ("BladeAccounting" type (:type "class") nil nil))
                nil [1919 1991])
            ("DEBUG_PRINT" variable (:constant-flag t) nil [2052 2063])
            ("CWorkRankTest" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2230 2237])
                    ("percentages" type
                       (:members 
                          ( ("actual" variable (:type "double") (reparse-symbol classsubparts) [2275 2289])
                            ("required" variable (:type "double") (reparse-symbol classsubparts) [2298 2314])
                            ("percentages" function
                               (:constructor-flag t
                                :type ("percentages" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [2323 2393])
                            ("percentages" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("a" variable (:type "double") (reparse-symbol arg-sub-list) [2414 2423])
                                    ("r" variable (:type "double") (reparse-symbol arg-sub-list) [2424 2433]))                                  
                                :type ("percentages" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [2402 2490]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [2242 2497])
                    ("InitEnv" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [2503 4136])
                    ("addGroup" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("groupOID" variable (:type "int") (reparse-symbol arg-sub-list) [4163 4176])
                            ("groupMin" variable (:type "int") (reparse-symbol arg-sub-list) [4177 4190])
                            ("groupMax" variable (:type "int") (reparse-symbol arg-sub-list) [4191 4204]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [4142 5272])
                    ("lookupGroupAssoc" function
                       (:pointer 1
                        :typemodifiers ("static")
                        :arguments 
                          ( ("groupOID" variable (:type "int") (reparse-symbol arg-sub-list) [5313 5326]))                          
                        :type ("ARsgSched" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5278 5691])
                    ("addWorkToGroup" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("groupOID" variable (:type "int") (reparse-symbol arg-sub-list) [5724 5737])
                            ("planId" variable (:type "int") (reparse-symbol arg-sub-list) [5738 5749])
                            ("priority" variable (:type "int") (reparse-symbol arg-sub-list) [5750 5763])
                            ("rateLimited" variable (:type "bool") (reparse-symbol arg-sub-list) [5795 5812])
                            ("inDelay" variable (:type "bool") (reparse-symbol arg-sub-list) [5813 5826]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [5697 6642])
                    ("CLEAR_SCHED" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [6648 7337])
                    ("ADD_SIMPLE_GROUP" variable (:constant-flag t) (reparse-symbol classsubparts) [7350 7366])
                    ("_PWR" variable (:constant-flag t) (reparse-symbol classsubparts) [7662 7666])
                    ("CHECK_GROUPS" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("expectations" variable
                               (:pointer 1
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("percentages" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [7751 7792]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7726 9717])
                    ("CHECK_GROUP" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("groupOID" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol arg-sub-list) [9747 9766])
                            ("actPct" variable (:type "double") (reparse-symbol arg-sub-list) [9767 9781])
                            ("reqPct" variable (:type "double") (reparse-symbol arg-sub-list) [9782 9796]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9723 9952])
                    ("CHECK_WORKITEM" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("groupOID" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol arg-sub-list) [9985 10004])
                            ("planId" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol arg-sub-list) [10005 10022])
                            ("actPct" variable (:type "double") (reparse-symbol arg-sub-list) [10023 10037])
                            ("reqPct" variable (:type "double") (reparse-symbol arg-sub-list) [10038 10052]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [9958 11879])
                    ("testEmpty" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [11885 12047])
                    ("testDiagramOne" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [12053 13727])
                    ("testDiagramTwo" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [13733 15457])
                    ("testAdmin" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [15463 17695])
                    ("testNonRsg" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [17701 19794])
                    ("testObscureGroups" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [19800 23446])
                    ("testWorkItems" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [23452 26138])
                    ("qaTest" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [26144 27966])
                    ("testDistribution" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [27972 29275])
                    ("test1000QPS" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [29281 30334])
                    ("test1000QPSWithMsg" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol classsubparts) [30340 31661])
                    ("RunTest" function
                       (:typemodifiers ("static")
                        :type "int")
                        (reparse-symbol classsubparts) [31667 32525]))                  
                :type "class")
                nil [2208 32528])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [32539 32548])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [32549 32561]))                  
                :type "int")
                nil [32530 32602]))          
      :file "testworkrank.cpp"
      :pointmax 32604
      :fsize 32603
      :lastmodtime '(20893 15401 606587 503000)
      :unmatched-syntax '((number 1956 . 1957) (number 1953 . 1954))
      :lexical-table 
        '(("_PWR" (spp-arg-list nil 7666 . 7668) . 
              ((symbol "Nz" 7669 . 7671) (punctuation "-" 7671 . 7672) (punctuation ">" 7672 . 7673) (symbol "workSched" 7673 . 7682) (punctuation "-" 7682 . 7683) (punctuation ">" 7683 . 7684) (symbol "m_snippetsched" 7684 . 7698) (punctuation "-" 7698 . 7699) (punctuation ">" 7699 . 7700) (symbol "updateWorkRanking" 7700 . 7717) (semantic-list "()" 7717 . 7719) (punctuation ";" 7719 . 7720)))
          ("DEBUG_PRINT" . ((number "0" 2064 . 2065)))
          ("ADD_SIMPLE_GROUP" (spp-arg-list ("groupOID" "min" "max") 7366 . 7386) . 
              ((semantic-list "{ \\
                                                 addGroup(groupOID, min, max); \\
                                                 addWorkToGroup(groupOID, groupOID, NZPRI_NORMAL, false, false); \\
                                                }" 7387 . 7636) (WHILE "while" 7637 . 7642) (semantic-list "(false)" 7643 . 7650)))
          )
))
  :file "!home!workspaces!dbarrett!int-marlin-1!main!src!tests!workrank!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
