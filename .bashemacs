#!/bin/bash


# Force GNU Global to use .h as source files. 
# Needed to index C++ template definitions correctly.
export GTAGSFORCECPP=""

# Emacs wrappers.

# -c open new window.  -a start server first if needed
ec()
{
  emacsclient -c -a "" "$*"
#  emacsclient  -a " " "$*"
}

ev()  ## Open as viewer, read-only mode.
{  
  emacs "$1" --eval '(setq buffer-read-only t)' 
}

ev2() 
{ 
  emacsclient --create-frame --eval '(view-file "'${1}'" )' 
}


# Backup Config files : Tar config files.
# See also github/danoxon/seeds
tconf() 
{
tar -czf ~/Dropbox/emacsconf.tgz  ~/.*emacs ~/.emacs.d ~/.bashemacs ~/.bashrc ~/.dir_colors ; echo "Emacs config saved"; ls -l ~/Dropbox/emacsconf.tgz

}

#Save Config files for emacs + related - github for now
sconf()
{
  # only add (update) tracked files. New files not affected unless pattern supplied
  git add -u   
  git commit -m "another update"
  echo "======= Files to be updated =======:"
  git status -s  | grep -v  '??'
  echo "hub sends ~ten updates"
  git push origin master  
#  git ls-files  # What are tracked files?
  echo "======= Files to be updated =======:"
  git status -s  | grep -v  '??'

}

chk()
{
git status | less    
}


# 

#========== GNU GLOBAL =================
alias g='global'      # Files with definitions

alias gr='global -rx' # (R)eferences with lineno and line
alias gf='global -f'  # Objects in (F)ile
alias gg='global -igx' # Case insensitive tag grep


# Don't tag entire huge source tree. Too many false positives in searches.
wlmtags()
{
  IN="/tmp/wlmfilelist"
  if [ -d "nde" ]; 
  then 
      find  nde/os -type f -print >$IN 
      find  pg/ -type f -print >> $IN 
      gtags -f $IN
   else
      echo "No nde dir found. not making gtags." 
   fi
}


# (A)ll definitions & references
ga() 
{ 
  echo "=== Definitions === "
  global -dx $1
  echo "=== References  ==="
  global -rx $1
  echo "=== Symbols     ==="
  global -sx $1
}


# Generate emacs commands to edit files found by global
# Start emacs at relevent line.  
# If files look correct, view them via:  !! | sh
ged()
{
   global -xr $1 | awk '{printf "emacs -nw  +%s %s < /dev/tty\n",$2,$3}'  
}

gghelp()
{
   echo "-x Definitions w/ lineno  -r References,  -f <file> Objects in file, -c <prefix>  Find matches"
   alias | grep global
}

# bash completion
funcs()
 {
         local cur
        cur=${COMP_WORDS[COMP_CWORD]}
         COMPREPLY=(`global -c $cur`)
 }
complete -F funcs global
